{"version":3,"sources":["index.js"],"names":["customInputForm","_ref2","field","_ref2$form","form","touched","errors","props","Object","C_Users_dell_Desktop_react_netlify_form_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","invalid","name","className","ReactApp","withFormik","mapPropsToValues","_ref3","firstname","lastname","state","city","validationSchema","Yup","shape","required","handleSubmit","values","_ref4","resetForm","setSubmitting","setErrors","setTimeout","console","log","_ref","isSubmitting","reactstrap__WEBPACK_IMPORTED_MODULE_4__","formik__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","for","type","component","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_7__","disabled","ReactDOM","render","document","getElementById"],"mappings":"iPAwCMA,EAAkB,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,MAAFC,EAAAF,EAASG,KAAOC,EAAhBF,EAAgBE,QAASC,EAAzBH,EAAyBG,OAAYC,EAArCC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,yBACpBS,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAAJ,OAAAK,OAAA,CACIC,WAAYT,EAAQH,EAAMa,QAAST,EAAOJ,EAAMa,QAC5Cb,EACAK,IACPF,EAAQH,EAAMa,OAAST,EAAOJ,EAAMa,OAASL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASV,EAAOJ,EAAMa,SAIrFE,EAAWC,YAAW,CAC1BC,iBAD0B,SAAAC,GAExB,MAAQ,CACNC,UAF8CD,EAAhCC,WAES,GACvBC,SAH8CF,EAAtBE,UAGH,GACrBC,MAJ8CH,EAAbG,OAIlB,GACfC,KAL8CJ,EAAPI,MAK1B,KAGjBC,iBAAiBC,WAAaC,MAAM,CAClCN,UAAUK,WAAaE,SAAS,0BAChCN,SAASI,WAAaE,SAAS,yBAC/BL,MAAMG,WAAaE,SAAS,qBAC5BJ,KAAKE,WAAaE,SAAS,sBAE7BC,aAf0B,SAebC,EAfaC,GAe+B,IAApCC,EAAoCD,EAApCC,UAAUC,EAA0BF,EAA1BE,cAAcC,EAAYH,EAAZG,UAC3CC,WAAW,WAA2B,WAAnBL,EAAOT,UACxBa,EAAU,CAACb,UAAU,uBAEnBW,IACFC,GAAc,IACd,KACFG,QAAQC,IAAIP,KAtBCZ,CAxCP,SAAAoB,KACRR,OADQQ,EAERhC,OAFQgC,EAGRjC,QAHQ,IAIRkC,EAJQD,EAIRC,aAJQ,OAOR7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACF9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACAhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,IAAI,aAAX,aACAlC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOI,KAAK,OAAO9B,KAAK,YAAY+B,UAAW9C,EAAgB+C,YAAY,eAE3ErC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,IAAI,YAAX,YACFlC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOI,KAAK,OAAO9B,KAAK,WAAW+B,UAAW9C,EAAiB+C,YAAY,cAE3ErC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,IAAI,SAAX,SACFlC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOI,KAAK,OAAO9B,KAAK,QAAQ+B,UAAW9C,EAAiB+C,YAAY,WAExErC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,IAAI,QAAX,QACFlC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOI,KAAK,OAAO9B,KAAK,OAAO+B,UAAW9C,EAAiB+C,YAAY,UAEvErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAQC,SAAUV,GAAlB,cA2CFW,IAASC,OAAOzC,EAAAC,EAAAC,cAACK,EAAD,MAAcmC,SAASC,eAAe","file":"static/js/main.2716aaf1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {FormGroup,Button,Label,Jumbotron} from 'reactstrap'\nimport {withFormik,Form,Field} from 'formik'\n\nimport * as Yup from 'yup'\n\n\n\nconst App=({\n  values,\n  errors,\n  touched,\n  isSubmitting\n\n})=>(\n  <Jumbotron>\n<Form>\n  <FormGroup>\n  <Label for=\"firstname\">FirstName</Label>\n  <Field type='text' name='firstname' component={customInputForm}placeholder='Firstname'/>\n  </FormGroup>\n  <FormGroup>\n    <Label for=\"lastname\">LastName</Label>\n  <Field type='text' name='lastname' component={customInputForm} placeholder='Lastname'/>\n  </FormGroup>\n  <FormGroup>\n    <Label for=\"state\">State</Label>\n  <Field type='text' name='state' component={customInputForm} placeholder='State'/>\n  </FormGroup>\n  <FormGroup>\n    <Label for=\"city\">City</Label>\n  <Field type='text' name='city' component={customInputForm} placeholder='City'/>\n  </FormGroup>\n  <Button disabled={isSubmitting}>Submit</Button>\n\n</Form>\n</Jumbotron>\n)\nconst customInputForm = ({field, form: {touched, errors}, ...props}) => (\n    <div>\n        <input\n            invalid={!!(touched[field.name] && errors[field.name])}\n            {...field}\n            {...props} />\n        {touched[field.name] && errors[field.name] && <div className=\"error\">{errors[field.name]}</div>}\n    </div>\n);\n\nconst ReactApp = withFormik({\n  mapPropsToValues({firstname,lastname,state,city}) {\n    return  {\n      firstname:firstname || '',\n      lastname:lastname || '',\n      state:state || '',\n      city:city || ''\n    }\n  },\n  validationSchema:Yup.object().shape({\n    firstname:Yup.string().required('First Name is required'),\n    lastname:Yup.string().required('Last Name is required'),\n    state:Yup.string().required('State is required'),\n    city:Yup.string().required('City is required')\n  }),\n  handleSubmit(values,{resetForm,setSubmitting,setErrors}) {\n    setTimeout(()=>{if(values.firstname==='manish'){\n      setErrors({firstname:'this name is taken'})\n    }else{\n        resetForm()}\n      setSubmitting(false)\n    },2000)\n    console.log(values)\n  }\n})(App)\n\n\n\nReactDOM.render(<ReactApp />, document.getElementById('root'));\n"],"sourceRoot":""}